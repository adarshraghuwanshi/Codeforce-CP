#include<bits/stdc++.h>
using namespace std;

const int MOD = 1e9 + 7;

int countWays(int n) {
    int totalSum = n * (n + 1) / 2;

    if (totalSum % 2 != 0) {
        // If the total sum is not even, there is no way to divide into two sets with equal sum
        return 0;
    }

    int targetSum = totalSum / 2;

    vector<vector<int>> dp(n + 1, vector<int>(targetSum + 1, 0));
    dp[0][0] = 1;

    for (int i = 1; i <= n; ++i) {
        for (int j = 0; j <= targetSum; ++j) {
            dp[i][j] = dp[i - 1][j];

            int remaining = j - i;
            if (remaining >= 0) {
                dp[i][j] = (dp[i][j] + dp[i - 1][remaining]) % MOD;
            }
        }
    }

    return dp[n][targetSum];
}

int main() {
    int n;
    cin >> n;

    int result = countWays(n);
    cout << result/2 << endl;

    return 0;
}
