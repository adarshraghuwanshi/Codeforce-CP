#include<bits/stdc++.h>
using namespace std;
const long long  MOD=1000000007;
long long  solve(vector<int> &a, int n, int m, int index, int prevVal, vector<vector<long long >> &dp){
if(index==n) return 1;
long long  ans=0;
if(dp[index][prevVal]!=-1) return dp[index][prevVal];
if(index==0){
if(a[index]!=0) ans+=solve(a,n,m,index+1,a[index],dp)%MOD;
else{
for(int i=1;i<=m; i++) ans+=solve(a,n,m,index+1,i,dp)%MOD;
}
}
else{
if(a[index]!=0) {
if(abs(a[index]-prevVal)<=1) ans+=solve(a,n,m,index+1,a[index],dp)%MOD;}
else{
for(int i=-1; i<=1; i++) {
if(prevVal+i>0 && prevVal+i<=m) ans+=solve(a,n,m,index+1,prevVal+i,dp)%MOD;
}
}
}
return dp[index][prevVal]=ans%MOD;
}
int main(){
    int n, m; cin>>n>>m;
vector<int> a(n);
for(int i=0; i<n; i++) cin>>a[i];
if(n==1){
if(a[0]==0) cout<<m;
else cout<<"1";
return 0;}

vector<vector<long long >> dp(n+1, vector<long long >(m+1,-1));

long long ans=solve(a,n,m,0,0,dp)%MOD;
cout<<ans;
}
