#include<bits/stdc++.h>
using namespace std;

int solve(vector<int> &prices, vector<int> &pages, int x, int index, vector<vector<int>> &dp){
if(x<=0 || index<0) return 0;
if(dp[x][index]!=-1) return dp[x][index];
int ans1=solve(prices,pages,x,index-1,dp);
int ans2=0;
if(  x>=prices[index]) ans2=pages[index]+solve(prices,pages,x-prices[index],index-1,dp);
return dp[x][index]=max(ans1,ans2);

}
int main(){
    int n,x; cin>>n>>x;

vector<int>prices(n);
vector<int> pages(n);
for(int i=0; i<n; i++) cin>>prices[i];
for(int i=0; i<n; i++) cin>>pages[i];
vector<vector<int>> dp(x+1, vector<int>(n+1,-1));
cout<<solve(prices,pages,x,n-1,dp);
}
